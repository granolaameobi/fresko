name: Build and Release

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  pr_check:
    runs-on: ubuntu-latest
    if: github.event_name=='pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Packages
        run: pip install -r requirements.txt
      - name: Run Tests
        run: |
          export PYTHONPATH=$(pwd)
          pytest
  release:
    runs-on: ubuntu-latest
    if: github.event_name=='push'
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: |
          npm i fs
          npm i semantic-release
          npm i @semantic-release/exec
          npm i @semantic-release/git
      - name: Release
        run: |
          npx semantic-release \
          -p @semantic-release/commit-analyzer \
          -p @semantic-release/release-notes-generator \
          -p @semantic-release/exec \
          -p @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Get Version
        id: version
        run: echo 'version='$(cat version.txt) >> $GITHUB_OUTPUT
  build_push:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          push: true
          file: build/Dockerfile
          tags: ghcr.io/granolaameobi/fresko/fresko:latest,ghcr.io/granolaameobi/fresko/fresko:${{ needs.release.outputs.version }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ build_push, release ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: ${{ secrets.GKE_KEY }}
      - name: Configure Secrets Helper
        run: gcloud --quiet auth configure-docker
      - name: GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: fresko-cluster-1
          location: europe-west1
      - name: Deploy
        run: |
          kubectl set image deployment/my-website-deployment fresko=ghcr.io/granolaameobi/fresko/fresko:${{ needs.release.outputs.version }} --record
          kubectl rollout status deployment/my-website-deployment
          kubectl apply -f deployment/secretmap.yaml
      - name: Get IP
        run: kubectl get services -o wide
